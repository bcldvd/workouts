!function(){"use strict";angular.module("angular",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","ngMaterial","timer","ngMdIcons","pascalprecht.translate"])}(),function(){"use strict";function e(e,t,n,r,a,o,s){function c(){function r(e){return d=e.data,m=e.data.exercises,g=e.data.levels,t.log(d),d}function a(e){t.error("XHR Failed for getWorkout.\n"+angular.toJson(e.data,!0))}var o=n.defer();return null===d?e.get(data).then(r)["catch"](a):(o.resolve(d),o.promise)}function i(e){var t=r.find(g,{levelId:e});return t.exercises.forEach(function(e){e=r.assign(e,r.find(m,{exerciseId:e.exerciseId}))}),t}function l(){return p}function u(e){p=e}var d=null,m=[],g=[],p=null,v={getWorkout:c,getLevel:i,getCurrentState:l,setCurrentState:u};return v}angular.module("angular").factory("workouts",e),e.$inject=["$http","$log","$q","_","workoutApi","levelsApi","exercisesApi"]}(),function(){"use strict";function e(){function e(e,t,n){function r(){n.setCurrentState(t.EXERCISE),l.currentExerciseIndex=0,s()}function a(){n.setCurrentState(t.REST),l.actualReps=l.currentExercise.reps}function o(){l.nextExercise?(n.setCurrentState(t.EXERCISE),l.currentExerciseIndex++,s()):n.setCurrentState(t.DONE),l.actualReps=null,e.$apply()}function s(){l.currentExercise=l.exercises[l.currentExerciseIndex],l.nextExercise=l.exercises.length>l.currentExerciseIndex+1?l.exercises[l.currentExerciseIndex+1]:null}function c(){l.actualReps--}function i(){l.actualReps++}var l=this;l.workouts=n,l.workoutStates=t,l.currentExercise={},l.currentExerciseIndex=null,l.nextExercise={},l.actualReps=null,l.exerciseDone=a,l.restDone=o,l.decreaseActualReps=c,l.increaseActualReps=i,r()}var t={restrict:"E",templateUrl:"app/components/workouts/workouts.html",scope:{creationDate:"=",exercises:"="},controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","workoutsStates","workouts"],t}angular.module("angular").directive("workouts",e)}(),function(){"use strict";angular.module("angular").constant("workoutsStates",{EXERCISE:0,REST:1,DONE:2}).constant("workoutApi","assets/mock/lafay").constant("levelsApi","/levels.json").constant("exercisesApi","/exercises.json")}(),function(){"use strict";function e(e,t){function n(n){function o(e){return e.data}function s(e){t.error("XHR Failed for getWorkout.\n"+angular.toJson(e.data,!0))}return e.get(r+n.key+"."+a).then(o)["catch"](s)}var r="assets/translations/",a="json";return n}angular.module("angular").factory("translateLoader",e),e.$inject=["$http","$log"]}(),function(){"use strict";function e(e){function t(){e.getWorkout().then(function(t){a.lastWorkout=t,a.currentLevelId=n(),a.level=e.getLevel(a.currentLevelId)})}function n(){return 0}function r(){a["continue"]=!0,a.currentExercise=a.level.exercises[0]}var a=this;a.lastWorkout={},a.currentLevelId=0,a["continue"]=!1,a.level={},a.workouts=e,a.continueLevel=r,t()}angular.module("angular").controller("MainController",e),e.$inject=["workouts"]}(),function(){"use strict";function e(){}angular.module("angular").run(e)}(),function(){"use strict";function e(e,t){e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}),t.otherwise("/")}angular.module("angular").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";angular.module("angular").constant("malarkey",malarkey).constant("toastr",toastr).constant("moment",moment).constant("_",_)}(),function(){"use strict";function e(e,t,n,r){e.debugEnabled(!0),t.options.timeOut=3e3,t.options.positionClass="toast-top-right",t.options.preventDuplicates=!0,t.options.progressBar=!0,n.theme("default").primaryPalette("green").accentPalette("red"),r.preferredLanguage("en").useLoader("translateLoader").fallbackLanguage(["en"]).useSanitizeValueStrategy("escaped")}angular.module("angular").config(e),e.$inject=["$logProvider","toastr","$mdThemingProvider","$translateProvider"]}(),angular.module("angular").run(["$templateCache",function(e){e.put("app/main/main.html",'<div layout="column" layout-fill="" class="main-layout"><md-content><md-toolbar class="workout-{{ main.workouts.getCurrentState() }}"><div class="md-toolbar-tools"><md-button class="md-icon-button" aria-label="Settings"><ng-md-icon icon="menu"></ng-md-icon></md-button><h2><span>Workouts - {{ main.lastWorkout.name }}</span></h2><span flex=""></span></div></md-toolbar><section layout="row" layout-sm="column" layout-align="center center" layout-wrap="" class="main-section"><md-button class="md-raised md-accent" ng-hide="main.continue" ng-click="main.continueLevel()">Continue with level {{ main.level.name }}</md-button><workouts exercises="main.level.exercises" ng-if="main.continue"></workouts></section></md-content></div>'),e.put("app/components/workouts/workouts.html",'<div class="workouts"><div ng-if="vm.workouts.getCurrentState() == vm.workoutStates.EXERCISE" ng-include="\'app/components/workouts/templates/exercise.html\'"></div><md-card ng-if="vm.workouts.getCurrentState() == vm.workoutStates.REST" class="workouts__rest"><md-toolbar><div class="md-toolbar-tools card-title"><h2 class="md-title">REST</h2></div></md-toolbar><md-card-content><section layout="row" layout-sm="column" layout-align="center center" layout-wrap="" class="actualReps">You did:<md-button class="md-fab" aria-label="Minus 1" ng-click="vm.decreaseActualReps()" ng-disabled="vm.actualReps < 1"><ng-md-icon icon="exposure_minus_1"></ng-md-icon></md-button><span class="md-display-1">{{ vm.actualReps }}</span><md-button class="md-fab" aria-label="Plus 1" ng-click="vm.increaseActualReps()"><ng-md-icon icon="exposure_plus_1"></ng-md-icon></md-button></section><md-divider></md-divider><div layout="row" layout-align="center center" class="timer"><timer countdown="vm.currentExercise.rest" interval="1000" finish-callback="vm.restDone()" class="md-display-3"><span ng-show="minutes > 0">{{minutes}}min</span> <span>{{seconds}}s</span></timer></div></md-card-content><div class="nextUp"><md-toolbar><div class="md-toolbar-tools" translate="WORKOUTS.NEXT_UP" translate-values="{ exercise: vm.nextExercise.name }"></div></md-toolbar><div class="nextUp__preview" layout="row" layout-align="center center" layout-wrap=""><img ng-src="{{vm.nextExercise.image}}" class="md-card-image" alt="vm.currentExercise.name"><p ng-if="vm.currentExercise.reps > 0">( {{ vm.nextExercise.reps }} )</p><p ng-if="vm.currentExercise.reps == 0">({{ \'WORKOUTS.AS_MANY_REPS\' | translate }})</p></div></div></md-card><md-card ng-if="vm.workouts.getCurrentState() == vm.workoutStates.DONE"><img ng-src="{{vm.currentExercise.image}}" class="md-card-image" alt="vm.currentExercise.name"><md-card-content><h2 class="md-title">DONE</h2></md-card-content><div class="md-actions" layout="row" layout-align="center center"></div></md-card></div>'),e.put("app/components/workouts/templates/exercise.html",'<md-card class="workouts__exercise"><md-toolbar><div class="md-toolbar-tools card-title"><h2 class="md-title">Exercise {{ vm.currentExercise.name }}</h2></div></md-toolbar><section layout="row" layout-align="center center"><img ng-src="{{vm.currentExercise.image}}" class="md-card-image" alt="vm.currentExercise.name"></section><md-card-content class="md-headline"><p class="reps" ng-if="vm.currentExercise.reps > 0"><span>{{ vm.currentExercise.reps }}</span> reps</p><p class="reps" ng-if="vm.currentExercise.reps == 0">{{ \'WORKOUTS.AS_MANY_REPS\' | translate }}</p></md-card-content><div class="md-actions" layout="row" layout-align="center center"><md-button class="md-accent md-raised" ng-click="vm.exerciseDone()">Done</md-button></div></md-card>')}]);